<?php

/**
 * @file
 * Contains insight_blocks.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function insight_blocks_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the insight_blocks module.
    case 'help.page.insight_blocks':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Try to map a string to an existing term, as for glossary use.
 *
 * Provides a case-insensitive and trimmed mapping, to maximize the
 * likelihood of a successful match.
 *
 * @param $name
 *   Name of the term to search for.
 * @param $vocabulary
 *   (optional) Vocabulary machine name to limit the search. Defaults to NULL.
 *
 * @return
 *   An array of matching term objects.
 */
function insight_blocks_taxonomy_term_load_by_name($name, $vocabulary = NULL) {
	$values = array('name' => trim($name));
	if (isset($vocabulary)) {
		$vocabularies = taxonomy_vocabulary_get_names();
		if (isset($vocabularies[$vocabulary])) {
			$values['vid'] = $vocabulary;
		}
		else {
			// Return an empty array when filtering by a non-existing vocabulary.
			return array();
		}
	}
	return entity_load_multiple_by_properties('taxonomy_term', $values);
}